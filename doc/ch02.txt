2019.03.03
項目11：.NETリソース管理を理解する

・2019.03.03：C++のデストラクタを利用してリソースを開放する
(概要)
	・C++プロジェクトを作成し、CriticalSectionクラスのデストラクタでリソースを開放する
	利用者側は、CriticalSectionをオート変数として定義する
(プロジェクト)
	CppDestructor：デストラクタの動作を確認するサンプルアプリ

・2019.03.03：C＃のファイナライザを利用してリソースを開放する
(概要)
	・C＃プロジェクトを作成し、CriticalSectionクラスのファイナライザでリソースを開放する
	利用者側は、CriticalSectionオブジェクトをヒープ上に作成する
(プロジェクト)
	CSharpFinalizer：ファイナライザの動作を確認するサンプルアプリ

項目11：.NETリソース管理を理解する

・2019.03.03：C++のデストラクタを利用してリソースを開放する
(概要)
	・C++プロジェクトを作成し、CriticalSectionクラスのデストラクタでリソースを開放する
	利用者側は、CriticalSectionをオート変数として定義する
(プロジェクト)
	CppDestructor：デストラクタの動作を確認するサンプルアプリ


2019.03.04
項目12：メンバには割当演算子よりもオブジェクト初期化子を使用すること

・2019.03.04：オブジェクト初期化子
(概要)
	・オブジェクト初期化子の利用例
(プロジェクト)
	ObjectInitializer：オブジェクト初期化子によってListメンバを初期化
	
・2019.03.04：システムによるゼロ初期化
(概要)
	・システムによって値型変数をゼロ初期化、明示的な初期化処理を省略
(プロジェクト)
	ZeroInitialize：システムによって値型変数を初期化して表示
(コメント)
	オート変数の値型変数を初期化子なしで宣言すると、「未割当のローカル変数」のエラーが出る
	
・2019.03.04：オブジェクト初期化子とコンストラクタによる複数回の初期化
システムによるゼロ初期化
(概要)
	・オブジェクト初期化子によって初期化後、さらにコンストラクタによって別の値に初期化
(プロジェクト)
	MultipleInitialize：メンバ変数を初期化して表示

	
2019.03.04
項目13：staticメンバを適切に初期化すること

・2019.03.04：staticメンバを利用したシングルトンの実装
(概要)
	・staticメンバ変数を利用してシングルトンパターンを実装
(プロジェクト)
	Singleton：シングルトンインスタンスを複数取得し、同一であることを確認

・2019.03.04：staticコンストラクタ
(概要)
	・staticコンストラクタを利用したシングルトンの実装
(プロジェクト)
	StaticConstructor：シングルトンインスタンスを複数取得し、同一であることを確認

・2019.03.04：staticコンストラクタで例外を処理
(概要)
	・staticコンストラクタ内で発生した例外をコンストラクタ内で処理する（外に出さない）
(プロジェクト)
	StaticInitializerException：シングルトンインスタンスを複数取得し、同一であることを確認


2019.03.04
項目14：初期化ロジックの重複を最小化する

・2019.03.04：コンストラクタ初期化子
(概要)
	・コンストラクタ初期化子を使用して初期化ロジックの重複を省く
(プロジェクト)
	ConstructorInitializer：オーバーロードされた各種コンストラクタにより変数を初期化し、内容を確認

・2019.03.04：コンストラクタのデフォルト引数
(概要)
	・コンストラクタのデフォルト引数を使用して初期化ロジックの重複を省く
	・new制約を満たすために引数なしのコンストラクタを別途定義
(プロジェクト)
	ConstructorDefaultArgument：デフォルト引数つきのコンストラクタにより変数を初期化し、内容を確認
		Listコレクションによってnew制約を確認

・2019.03.04：共通初期化メソッドの呼び出し
(概要)
	・オーバーロードされたコンストラクタから共通初期化メソッドを呼び出す
(プロジェクト)
	CommonInitializerMethod：オーバーロードされた各種コンストラクタにより変数を初期化し、内容を確認

・2019.03.04：共通初期化メソッドからreadonlyメンバーの初期化
(概要)
	・オーバーロードされたコンストラクタから共通初期化メソッドを呼び出す
	・共通初期化メソッドからreadonlyメンバを初期化することができない
(プロジェクト)
	InitializeReadOnlyMember：オーバーロードされた各種コンストラクタにより変数を初期化し、内容を確認

