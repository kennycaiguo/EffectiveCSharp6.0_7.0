(ドキュメント)

・VisualStudioとGitHubを連携させてみた
https://qiita.com/elu_jaune/items/eb354558d0dc39add152
	

(トラブルシュート)

・VC2017でVC++プロジェクトを作成する
	
	環境変数に以下を設定する

	INCLUDE：
		C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\SDK\ScopeCppSDK\VC\include
		C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\SDK\ScopeCppSDK\SDK\include
	LIB：
		C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\SDK\ScopeCppSDK\SDK\lib
	C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\SDK\ScopeCppSDK\VC\lib

(進捗)

第1章：C#言語イディオム

2019.02.17、2019.03.05
項目１：ローカル変数の型をなるべく暗黙的に指定すること
(コメント)
	・IQuaryableの例は省略

2019.02.17、2019.03.06
項目2：constよりもreadonlyを使用すること

2019.02.17、2019.02.23
項目3：キャストにはisまたはasを使用すること

2019.02.23
項目4：string.Format()を補完文字列に置き換える
（コメント）
	・Console.WriteLine($"円周率の値は{(round ? Math.PI.ToString() : Math.PI.ToString("F2"))}");
	において、リテラル文字列指定$@"は不要
	・補完文字列途中で改行する方法が不明
	
2019.02.23
項目5：カルチャ固有の文字列よりもFormattableStringを使用すること
(コメント)
	・コード例のstring.Fromat(null,・・・)はランタイムエラーとなる。代わりに、
	　src.ToString(System.Globalization.CultureInfo.CreateSpecificCulture("de-de"))
	とした
	
2019.02.23
項目6：文字列指定のAPIを指定しないこと

2019.02.24
項目7：デリゲートを使用してコールバックを表現する
(コメント)
	・テキストの記述と異なり、List<int>.Find()は、マッチした最初の要素(int)を返す

2019.02.24
項目8：イベントの呼び出し時にnull条件演算子を使用すること

2019.02.24
項目9：ボックス化およびボックス化解除を最小限に抑える

2019.03.02、2019.03.03
項目10：親クラスの変更に応じる場合のみnew修飾子を使用すること


第２章：リソース管理

2019.03.03
項目11：.NETリソース管理を理解する

2019.03.04
項目12：メンバには割当演算子よりもオブジェクト初期化子を使用すること

2019.03.04
項目13：staticメンバを適切に初期化すること

2019.03.04
項目14：初期化ロジックの重複を最小化する

2019.03.04、2019.03.05
項目15：不必要なオブジェクトの生成を避けること

2019.03.05
項目16：コンストラクタ内では仮想メソッドを呼ばないこと

2019.03.05
項目17：標準的なDisposeパターンを実装する
